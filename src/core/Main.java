/*
 * Hamza Raza
 * June 13, 2014
 * ICS4U1
 * Main class
 */
package core;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashSet;
import java.util.Scanner;

import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

import objects.Inventory;
import objects.Item;
import structures.LinkedList;

public class Main {

	public static void main(String[] args) {
		new Main().initialize();
	}

	// declaring objects and fields
	Inventory inv = new Inventory(new ArrayList<Item>(), 0);
	LinkedList list = new LinkedList();
	double total;
	double price;
	int stock;
	boolean ascending = false;

	/*
	 * opens the gui and reads the inventory data from the database creates an
	 * item object for each data set and adds each item to inventory
	 */
	public void initialize() {
		try {
			new ShoppingUI().main(null);
			Scanner sc = new Scanner(new File("Data//Database.txt"));

			while (sc.hasNextLine()) {
				String section = sc.nextLine();
				for (int i = 0; i < 4; i++) {
					String type = sc.nextLine();
					for (int j = 0; j < 4; j++) {
						String name = sc.nextLine();
						int itemId = Integer.parseInt(sc.nextLine());
						double price = Double.parseDouble(sc.nextLine());
						int stock = Integer.parseInt(sc.nextLine());
						Item item = new Item(section, type, name, itemId,
								price, stock);
						inv.add(item);
					}
				}
			}
			inv.setSize(inv.getItems().size());
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		}
	}

	/*
	 * method to return an Item if it can find it in the inventory pre: String
	 * name post: returns value of type Item
	 */
	public Item findItem(String name) {
		for (Item i : inv.getItems()) {
			if (i.getName().equalsIgnoreCase(name))
				return i;
		}
		return null;
	}

	/*
	 * method to return the types of a particular section A set is used in order
	 * to not return duplicate types pre: String section post: returns value of
	 * type HashSet<String>
	 */
	public HashSet<String> getTypes(String section) {
		HashSet<String> ret = new HashSet<String>();
		for (Item i : inv.getItems()) {
			if (i.getSection().equalsIgnoreCase(section)) {
				ret.add(i.getType());
			}
		}
		return ret;
	}

	/*
	 * method to return the items of a particular type pre: String type post:
	 * returns value of type Item[]
	 */
	public Item[] getItems(String type) {
		HashSet<Item> ret = new HashSet<Item>();
		for (Item i : inv.getItems()) {
			if (i.getType().equalsIgnoreCase(type)) {
				ret.add(i);
			}
		}
		return ret.toArray(new Item[ret.size()]);
	}

	/*
	 * method to sort the item array using selection sort by its field price
	 * pre: Item[] toSort post: returns value of type Item[]
	 */
	public static void sortByPrice(Item[] toSort) {
		for (int i = toSort.length - 1; i > 0; i--) {
			int max = 0;
			for (int j = 1; j <= i; j++) {
				if (toSort[j].compareByPrice(toSort[max]) > 0) {
					max = j;
				}
			}
			Item temp = toSort[i];
			toSort[i] = toSort[max];
			toSort[max] = temp;
		}
	}

	/*
	 * method to sort the item array using selection sort by its field id pre:
	 * Item[] toSort post: returns value of type Item[]
	 */
	public static void sortById(Item[] toSort) {
		for (int i = toSort.length - 1; i > 0; i--) {
			int max = 0;
			for (int j = 1; j <= i; j++) {
				if (toSort[j].compareById(toSort[max]) > 0) {
					max = j;
				}
			}
			Item temp = toSort[i];
			toSort[i] = toSort[max];
			toSort[max] = temp;
		}
	}

	/*
	 * binary search method to quickly search for the item id entered by the
	 * user pre: Item[] items, int start, int end, int goal post: returns value
	 * of int (representing the index)
	 */
	public static int binarySearch(Item[] items, int start, int end, int goal) {
		if (start > end) {
			return (-1);
		} else {
			int mid = (start + end) / 2;
			if (goal == items[mid].getItemId()) {
				return (mid);
			} else if (goal < items[mid].getItemId()) {
				return (binarySearch(items, start, mid - 1, goal));
			} else {
				return (binarySearch(items, mid + 1, end, goal));
			}
		}
	}

	/*
	 * GUI created using NetBeans IDE Implementation is done by the group
	 */
	public class ShoppingUI extends javax.swing.JFrame {

		/**
		 * Creates new form ShoppingUI
		 */
		public ShoppingUI() {
			initComponents();
		}

		/**
		 * This method is called from within the constructor to initialize the
		 * form. WARNING: Do NOT modify this code. The content of this method is
		 * always regenerated by the Form Editor.
		 */
		@SuppressWarnings("unchecked")
		// <editor-fold defaultstate="collapsed" desc="Generated Code">
		private void initComponents() {

			jLabel1 = new javax.swing.JLabel();
			jScrollPane1 = new javax.swing.JScrollPane();
			sections = new javax.swing.JList();
			jLabel2 = new javax.swing.JLabel();
			jScrollPane2 = new javax.swing.JScrollPane();
			types = new javax.swing.JList();
			jLabel3 = new javax.swing.JLabel();
			jScrollPane3 = new javax.swing.JScrollPane();
			items = new javax.swing.JList();
			jLabel4 = new javax.swing.JLabel();
			sortPrice = new javax.swing.JButton();
			searchBox = new javax.swing.JTextField();
			jLabel5 = new javax.swing.JLabel();
			addCart = new javax.swing.JButton();
			removeCart = new javax.swing.JButton();
			jScrollPane4 = new javax.swing.JScrollPane();
			cart = new javax.swing.JList();
			jLabel6 = new javax.swing.JLabel();
			jLabel7 = new javax.swing.JLabel();
			search = new javax.swing.JButton();
			jPanel1 = new javax.swing.JPanel();
			jLabel8 = new javax.swing.JLabel();
			jLabel9 = new javax.swing.JLabel();
			jLabel10 = new javax.swing.JLabel();
			jLabel11 = new javax.swing.JLabel();
			jPanel2 = new javax.swing.JPanel();
			jLabel12 = new javax.swing.JLabel();
			jButton1 = new javax.swing.JButton();

			setTitle("Sarina's Outfitters");
			setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
			Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
			int height = screenSize.height;
			int width = screenSize.width;
			setSize(width / 2, height / 2);
			setLocationRelativeTo(null);
			setResizable(false);

			jLabel1.setFont(new java.awt.Font("Monotype Corsiva", 1, 44)); // NOI18N
			jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
			jLabel1.setText("Sarina's Outfitters");

			sections.setModel(new javax.swing.AbstractListModel() {
				String[] strings = { "Tops", "Bottoms", "Shoes", "Accessories" };

				public int getSize() {
					return strings.length;
				}

				public Object getElementAt(int i) {
					return strings[i];
				}
			});
			sections
					.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
			sections
					.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
						public void valueChanged(
								javax.swing.event.ListSelectionEvent evt) {
							sectionsValueChanged(evt);
						}
					});
			jScrollPane1.setViewportView(sections);

			jLabel2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
			jLabel2.setText("Sections");

			types
					.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
			types
					.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
						public void valueChanged(
								javax.swing.event.ListSelectionEvent evt) {
							typesValueChanged(evt);
						}
					});
			jScrollPane2.setViewportView(types);

			jLabel3.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
			jLabel3.setText("Types");

			items
					.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
			items
					.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
						public void valueChanged(
								javax.swing.event.ListSelectionEvent evt) {
							itemsValueChanged(evt);
						}
					});
			jScrollPane3.setViewportView(items);

			jLabel4.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
			jLabel4.setText("Items");

			sortPrice.setText("Sort by price");
			sortPrice.addActionListener(new java.awt.event.ActionListener() {
				public void actionPerformed(java.awt.event.ActionEvent evt) {
					sortPriceActionPerformed(evt);
				}
			});

			searchBox.setText("Example: 114");
			searchBox.addActionListener(new java.awt.event.ActionListener() {
				public void actionPerformed(java.awt.event.ActionEvent evt) {
					searchBoxActionPerformed(evt);
				}
			});

			jLabel5.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
			jLabel5.setText("Enter item id");

			addCart.setText("Add to cart");
			addCart.addActionListener(new java.awt.event.ActionListener() {
				public void actionPerformed(java.awt.event.ActionEvent evt) {
					addCartActionPerformed(evt);
				}
			});

			removeCart.setText("Remove");
			removeCart.addActionListener(new java.awt.event.ActionListener() {
				public void actionPerformed(java.awt.event.ActionEvent evt) {
					removeCartActionPerformed(evt);
				}
			});

			cart
					.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
			cart
					.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
						public void valueChanged(
								javax.swing.event.ListSelectionEvent evt) {
							cartValueChanged(evt);
						}
					});
			jScrollPane4.setViewportView(cart);

			jLabel7.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
			jLabel7.setText("Cart");

			search.setText("Search");
			search.addActionListener(new java.awt.event.ActionListener() {
				public void actionPerformed(java.awt.event.ActionEvent evt) {
					searchActionPerformed(evt);
				}
			});

			jPanel1.setBackground(new java.awt.Color(255, 255, 255));
			jPanel1.setBorder(javax.swing.BorderFactory
					.createLineBorder(new java.awt.Color(0, 0, 0)));

			jLabel8.setBackground(new java.awt.Color(255, 255, 255));
			jLabel8.setIcon(new javax.swing.ImageIcon("Images//Main.jpg")); // NOI18N

			javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(
					jPanel1);
			jPanel1.setLayout(jPanel1Layout);
			jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(
					javax.swing.GroupLayout.Alignment.LEADING).addComponent(
					jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE,
					javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));
			jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(
					javax.swing.GroupLayout.Alignment.LEADING).addComponent(
					jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE,
					javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));

			jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
			jLabel9.setText("Total:");

			jLabel10.setText("$");

			jLabel11.setText("Stock: ");

			jPanel2.setBackground(new java.awt.Color(255, 255, 255));
			jPanel2.setBorder(javax.swing.BorderFactory
					.createLineBorder(new java.awt.Color(0, 0, 0)));

			jLabel12.setBackground(new java.awt.Color(255, 255, 255));
			jLabel12.setIcon(new javax.swing.ImageIcon("Images//Logo.jpg")); // NOI18N

			javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(
					jPanel2);
			jPanel2.setLayout(jPanel2Layout);
			jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(
					javax.swing.GroupLayout.Alignment.LEADING).addComponent(
					jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE,
					javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));
			jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(
					javax.swing.GroupLayout.Alignment.LEADING).addComponent(
					jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE,
					javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));

			jButton1.setText("Check Out");
			jButton1.addActionListener(new java.awt.event.ActionListener() {
				public void actionPerformed(java.awt.event.ActionEvent evt) {
					jButton1ActionPerformed(evt);
				}
			});

			javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
					getContentPane());
			getContentPane().setLayout(layout);
			layout
					.setHorizontalGroup(layout
							.createParallelGroup(
									javax.swing.GroupLayout.Alignment.LEADING)
							.addComponent(jLabel1,
									javax.swing.GroupLayout.DEFAULT_SIZE,
									javax.swing.GroupLayout.DEFAULT_SIZE,
									Short.MAX_VALUE)
							.addGroup(
									layout
											.createSequentialGroup()
											.addContainerGap()
											.addGroup(
													layout
															.createParallelGroup(
																	javax.swing.GroupLayout.Alignment.LEADING)
															.addGroup(
																	layout
																			.createSequentialGroup()
																			.addGroup(
																					layout
																							.createParallelGroup(
																									javax.swing.GroupLayout.Alignment.LEADING)
																							.addComponent(
																									jScrollPane1,
																									javax.swing.GroupLayout.PREFERRED_SIZE,
																									100,
																									javax.swing.GroupLayout.PREFERRED_SIZE)
																							.addComponent(
																									jLabel2))
																			.addPreferredGap(
																					javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																			.addGroup(
																					layout
																							.createParallelGroup(
																									javax.swing.GroupLayout.Alignment.LEADING,
																									false)
																							.addGroup(
																									layout
																											.createSequentialGroup()
																											.addComponent(
																													jLabel3)
																											.addGap(
																													62,
																													62,
																													62))
																							.addGroup(
																									layout
																											.createSequentialGroup()
																											.addComponent(
																													jScrollPane2,
																													javax.swing.GroupLayout.PREFERRED_SIZE,
																													0,
																													Short.MAX_VALUE)
																											.addGap(
																													6,
																													6,
																													6))))
															.addGroup(
																	layout
																			.createSequentialGroup()
																			.addComponent(
																					jPanel2,
																					javax.swing.GroupLayout.DEFAULT_SIZE,
																					javax.swing.GroupLayout.DEFAULT_SIZE,
																					Short.MAX_VALUE)
																			.addPreferredGap(
																					javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
											.addGroup(
													layout
															.createParallelGroup(
																	javax.swing.GroupLayout.Alignment.LEADING)
															.addGroup(
																	layout
																			.createSequentialGroup()
																			.addComponent(
																					jLabel4)
																			.addContainerGap(
																					javax.swing.GroupLayout.DEFAULT_SIZE,
																					Short.MAX_VALUE))
															.addGroup(
																	layout
																			.createSequentialGroup()
																			.addGroup(
																					layout
																							.createParallelGroup(
																									javax.swing.GroupLayout.Alignment.LEADING)
																							.addGroup(
																									layout
																											.createSequentialGroup()
																											.addGroup(
																													layout
																															.createParallelGroup(
																																	javax.swing.GroupLayout.Alignment.LEADING)
																															.addComponent(
																																	jScrollPane3,
																																	javax.swing.GroupLayout.PREFERRED_SIZE,
																																	140,
																																	javax.swing.GroupLayout.PREFERRED_SIZE)
																															.addComponent(
																																	sortPrice)
																															.addComponent(
																																	jLabel5))
																											.addGroup(
																													layout
																															.createParallelGroup(
																																	javax.swing.GroupLayout.Alignment.LEADING)
																															.addGroup(
																																	layout
																																			.createSequentialGroup()
																																			.addGroup(
																																					layout
																																							.createParallelGroup(
																																									javax.swing.GroupLayout.Alignment.LEADING)
																																							.addGroup(
																																									layout
																																											.createSequentialGroup()
																																											.addGap(
																																													37,
																																													37,
																																													37)
																																											.addGroup(
																																													layout
																																															.createParallelGroup(
																																																	javax.swing.GroupLayout.Alignment.LEADING)
																																															.addComponent(
																																																	removeCart,
																																																	javax.swing.GroupLayout.PREFERRED_SIZE,
																																																	90,
																																																	javax.swing.GroupLayout.PREFERRED_SIZE)
																																															.addComponent(
																																																	addCart,
																																																	javax.swing.GroupLayout.PREFERRED_SIZE,
																																																	90,
																																																	javax.swing.GroupLayout.PREFERRED_SIZE)))
																																							.addGroup(
																																									javax.swing.GroupLayout.Alignment.TRAILING,
																																									layout
																																											.createSequentialGroup()
																																											.addGap(
																																													10,
																																													10,
																																													10)
																																											.addGroup(
																																													layout
																																															.createParallelGroup(
																																																	javax.swing.GroupLayout.Alignment.TRAILING)
																																															.addGroup(
																																																	layout
																																																			.createSequentialGroup()
																																																			.addComponent(
																																																					jLabel11)
																																																			.addPreferredGap(
																																																					javax.swing.LayoutStyle.ComponentPlacement.RELATED,
																																																					javax.swing.GroupLayout.DEFAULT_SIZE,
																																																					Short.MAX_VALUE)
																																																			.addComponent(
																																																					jLabel10,
																																																					javax.swing.GroupLayout.PREFERRED_SIZE,
																																																					36,
																																																					javax.swing.GroupLayout.PREFERRED_SIZE))
																																															.addComponent(
																																																	jPanel1,
																																																	javax.swing.GroupLayout.DEFAULT_SIZE,
																																																	javax.swing.GroupLayout.DEFAULT_SIZE,
																																																	Short.MAX_VALUE))
																																											.addPreferredGap(
																																													javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																																											.addComponent(
																																													jLabel6)))
																																			.addGap(
																																					144,
																																					144,
																																					144))
																															.addGroup(
																																	layout
																																			.createSequentialGroup()
																																			.addGap(
																																					163,
																																					163,
																																					163)
																																			.addGroup(
																																					layout
																																							.createParallelGroup(
																																									javax.swing.GroupLayout.Alignment.LEADING)
																																							.addComponent(
																																									jLabel7)
																																							.addComponent(
																																									jScrollPane4,
																																									javax.swing.GroupLayout.PREFERRED_SIZE,
																																									140,
																																									javax.swing.GroupLayout.PREFERRED_SIZE))
																																			.addGap(
																																					0,
																																					0,
																																					Short.MAX_VALUE))))
																							.addGroup(
																									layout
																											.createSequentialGroup()
																											.addComponent(
																													searchBox,
																													javax.swing.GroupLayout.PREFERRED_SIZE,
																													106,
																													javax.swing.GroupLayout.PREFERRED_SIZE)
																											.addGap(
																													0,
																													0,
																													Short.MAX_VALUE))
																							.addGroup(
																									javax.swing.GroupLayout.Alignment.TRAILING,
																									layout
																											.createSequentialGroup()
																											.addComponent(
																													search)
																											.addPreferredGap(
																													javax.swing.LayoutStyle.ComponentPlacement.RELATED,
																													javax.swing.GroupLayout.DEFAULT_SIZE,
																													Short.MAX_VALUE)
																											.addGroup(
																													layout
																															.createParallelGroup(
																																	javax.swing.GroupLayout.Alignment.LEADING)
																															.addComponent(
																																	jLabel9,
																																	javax.swing.GroupLayout.PREFERRED_SIZE,
																																	75,
																																	javax.swing.GroupLayout.PREFERRED_SIZE)
																															.addComponent(
																																	jButton1))))
																			.addContainerGap()))));
			layout
					.setVerticalGroup(layout
							.createParallelGroup(
									javax.swing.GroupLayout.Alignment.LEADING)
							.addGroup(
									layout
											.createSequentialGroup()
											.addComponent(
													jLabel1,
													javax.swing.GroupLayout.PREFERRED_SIZE,
													45,
													javax.swing.GroupLayout.PREFERRED_SIZE)
											.addGap(18, 18, 18)
											.addGroup(
													layout
															.createParallelGroup(
																	javax.swing.GroupLayout.Alignment.BASELINE)
															.addComponent(
																	jLabel2)
															.addComponent(
																	jLabel3)
															.addComponent(
																	jLabel4)
															.addComponent(
																	jLabel7))
											.addGap(1, 1, 1)
											.addGroup(
													layout
															.createParallelGroup(
																	javax.swing.GroupLayout.Alignment.LEADING)
															.addGroup(
																	layout
																			.createSequentialGroup()
																			.addGroup(
																					layout
																							.createParallelGroup(
																									javax.swing.GroupLayout.Alignment.LEADING)
																							.addGroup(
																									layout
																											.createSequentialGroup()
																											.addComponent(
																													addCart)
																											.addPreferredGap(
																													javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																											.addComponent(
																													removeCart)
																											.addGroup(
																													layout
																															.createParallelGroup(
																																	javax.swing.GroupLayout.Alignment.LEADING)
																															.addGroup(
																																	layout
																																			.createSequentialGroup()
																																			.addGap(
																																					112,
																																					112,
																																					112)
																																			.addComponent(
																																					jLabel6))
																															.addGroup(
																																	layout
																																			.createSequentialGroup()
																																			.addPreferredGap(
																																					javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																																			.addComponent(
																																					jPanel1,
																																					javax.swing.GroupLayout.PREFERRED_SIZE,
																																					javax.swing.GroupLayout.DEFAULT_SIZE,
																																					javax.swing.GroupLayout.PREFERRED_SIZE))))
																							.addGroup(
																									layout
																											.createSequentialGroup()
																											.addComponent(
																													jScrollPane4,
																													javax.swing.GroupLayout.PREFERRED_SIZE,
																													235,
																													javax.swing.GroupLayout.PREFERRED_SIZE)
																											.addPreferredGap(
																													javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																											.addComponent(
																													jLabel9)))
																			.addPreferredGap(
																					javax.swing.LayoutStyle.ComponentPlacement.RELATED,
																					javax.swing.GroupLayout.DEFAULT_SIZE,
																					Short.MAX_VALUE)
																			.addGroup(
																					layout
																							.createParallelGroup(
																									javax.swing.GroupLayout.Alignment.LEADING)
																							.addComponent(
																									searchBox,
																									javax.swing.GroupLayout.PREFERRED_SIZE,
																									javax.swing.GroupLayout.DEFAULT_SIZE,
																									javax.swing.GroupLayout.PREFERRED_SIZE)
																							.addComponent(
																									jLabel10)
																							.addComponent(
																									jLabel11))
																			.addPreferredGap(
																					javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																			.addGroup(
																					layout
																							.createParallelGroup(
																									javax.swing.GroupLayout.Alignment.BASELINE)
																							.addComponent(
																									search)
																							.addComponent(
																									jButton1))
																			.addContainerGap())
															.addGroup(
																	layout
																			.createSequentialGroup()
																			.addGroup(
																					layout
																							.createParallelGroup(
																									javax.swing.GroupLayout.Alignment.LEADING)
																							.addComponent(
																									jScrollPane2)
																							.addComponent(
																									jScrollPane1)
																							.addComponent(
																									jScrollPane3))
																			.addPreferredGap(
																					javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																			.addGroup(
																					layout
																							.createParallelGroup(
																									javax.swing.GroupLayout.Alignment.LEADING)
																							.addGroup(
																									layout
																											.createSequentialGroup()
																											.addComponent(
																													sortPrice)
																											.addPreferredGap(
																													javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																											.addComponent(
																													jLabel5))
																							.addComponent(
																									jPanel2,
																									javax.swing.GroupLayout.PREFERRED_SIZE,
																									javax.swing.GroupLayout.DEFAULT_SIZE,
																									javax.swing.GroupLayout.PREFERRED_SIZE))
																			.addGap(
																					15,
																					15,
																					15)))));

			pack();
		}// </editor-fold>

		/*
		 * method to add a value to a list if the button addCart is pressed
		 */
		private void addCartActionPerformed(java.awt.event.ActionEvent evt) {
			if (items.getSelectedValue() != null) {
				Item item = findItem(items.getSelectedValue().toString());
				if (item.inStock()) {
					list.append(item);
					DefaultListModel model = new DefaultListModel();
					total = 0;
					for (Item i : list.getItems()) {
						model.addElement(i.getName());
						total += i.getPrice();
						jLabel9.setText("Total: $" + Math.round(total * 100.0)
								/ 100.0);
					}
					cart.setModel(model);
					item.setStock(item.getStock() - 1);
					jLabel11.setText("Stock: " + item.getStock());
				}
			}
		}

		/*
		 * method to remove a value from the JList if the button remove is
		 * pressed similar to the addCart above except it removes an item
		 */
		private void removeCartActionPerformed(java.awt.event.ActionEvent evt) {
			if (cart.getSelectedValue() != null) {
				Item item = findItem(cart.getSelectedValue().toString());
				list.remove(item);
				DefaultListModel model = new DefaultListModel();
				total = 0;
				for (Item i : list.getItems()) {
					model.addElement(i.getName());
					total += i.getPrice();
				}
				jLabel9.setText("Total: $" + Math.round(total * 100.0) / 100.0);
				item.setStock(item.getStock() + 1);
				jLabel11.setText("Stock: " + item.getStock());
				cart.setModel(model);
			}
		}

		/*
		 * method to sort the values in the JList if the button sort is pressed
		 */
		private void sortPriceActionPerformed(java.awt.event.ActionEvent evt) {
			String type = (String) types.getSelectedValue();
			if (type != null) {
				if (types.getSelectedValue().equals(type)) {
					Item[] values = getItems(type);
					sortByPrice(values);
					if (ascending == false) {
						DefaultListModel model = new DefaultListModel();
						for (Item i : values) {
							model.addElement(i.getName());
						}
						items.setModel(model);
						ascending = true;
					} else {
						Collections.reverse(Arrays.asList(values));
						DefaultListModel model = new DefaultListModel();
						for (Item i : values) {
							model.addElement(i.getName());
						}
						items.setModel(model);
						ascending = false;
					}
				}
			}
		}

		/*
		 * method to change types JList depending on value selected in sections
		 * JList
		 */
		private void sectionsValueChanged(
				javax.swing.event.ListSelectionEvent evt) {
			String section = (String) sections.getSelectedValue();
			if (sections != null) {
				if (sections.getSelectedValue().equals(section)) {
					DefaultListModel model = new DefaultListModel();
					HashSet<String> values = getTypes(section);
					for (String str : values) {
						model.addElement(str);
					}
					types.setModel(model);
					DefaultListModel model2 = new DefaultListModel();
					model2.clear();
					items.setModel(model2);
				}
			}
		}

		/*
		 * method to change items JList depending on value selected in types
		 * JList
		 */
		private void typesValueChanged(javax.swing.event.ListSelectionEvent evt) {
			String type = (String) types.getSelectedValue();
			if (type != null) {
				if (types.getSelectedValue().equals(type)) {
					DefaultListModel model = new DefaultListModel();
					Item[] values = getItems(type);
					for (Item i : values) {
						model.addElement(i.getName());
					}
					items.setModel(model);
				}
			}
		}

		/*
		 * method to change the details (pic/labels) depending on the items
		 * selected
		 */
		private void itemsValueChanged(javax.swing.event.ListSelectionEvent evt) {
			String item = (String) items.getSelectedValue();
			if (item != null) {
				if (items.getSelectedValue().equals(item)) {
					Item value = findItem(item);
					price = value.getPrice();
					jLabel8.setIcon(new javax.swing.ImageIcon("Images//" + item
							+ ".jpg"));
					jLabel10.setText("$" + Math.round(price * 100.0) / 100.0);
					jLabel11.setText("Stock: " + value.getStock());
				}
			}
		}

		private void cartValueChanged(javax.swing.event.ListSelectionEvent evt) {
			// TODO add your handling code here:
		}

		private void searchBoxActionPerformed(java.awt.event.ActionEvent evt) {
			// TODO add your handling code here:
		}

		/*
		 * method to search for an item using binary search
		 */
		private void searchActionPerformed(java.awt.event.ActionEvent evt) {
			Item[] values = inv.getItems().toArray(new Item[inv.getSize()]);
			sortById(values);
			if (!searchBox.getText().equalsIgnoreCase("")) {
				int id = Integer.parseInt(searchBox.getText().replaceAll(
						"[^0-9]", ""));
				int index = binarySearch(values, 0, values.length - 1, id);
				if (index != -1) {
					DefaultListModel model = new DefaultListModel();
					model.addElement(values[index].getType());
					types.setModel(model);
					DefaultListModel model2 = new DefaultListModel();
					model2.addElement(values[index].getName());
					items.setModel(model2);
				}
			}
		}

		/*
		 * method to check out the items by deleting the LinkedList and changing
		 * the total to 0
		 */
		private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
			if (list.getItems().size() > 0) {
				DefaultListModel model = new DefaultListModel();
				JOptionPane
						.showMessageDialog(null, "Thank you for purchasing!");
				list.deleteList();
				total = 0;
				jLabel9.setText("Total: $" + Math.round(total * 100.0) / 100.0);
				cart.setModel(model);
			}
		}

		/**
		 * @param args
		 *            the command line arguments
		 */
		public void main(String args[]) {
			/* Set the Nimbus look and feel */
			// <editor-fold defaultstate="collapsed" desc=" Look and feel
			// setting code (optional) ">
			/*
			 * If Nimbus (introduced in Java SE 6) is not available, stay with
			 * the default look and feel. For details see
			 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
			 */
			try {
				for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager
						.getInstalledLookAndFeels()) {
					if ("Nimbus".equals(info.getName())) {
						javax.swing.UIManager.setLookAndFeel(info
								.getClassName());
						break;
					}
				}
			} catch (ClassNotFoundException ex) {
				java.util.logging.Logger.getLogger(ShoppingUI.class.getName())
						.log(java.util.logging.Level.SEVERE, null, ex);
			} catch (InstantiationException ex) {
				java.util.logging.Logger.getLogger(ShoppingUI.class.getName())
						.log(java.util.logging.Level.SEVERE, null, ex);
			} catch (IllegalAccessException ex) {
				java.util.logging.Logger.getLogger(ShoppingUI.class.getName())
						.log(java.util.logging.Level.SEVERE, null, ex);
			} catch (javax.swing.UnsupportedLookAndFeelException ex) {
				java.util.logging.Logger.getLogger(ShoppingUI.class.getName())
						.log(java.util.logging.Level.SEVERE, null, ex);
			}
			// </editor-fold>

			/* Create and display the form */
			java.awt.EventQueue.invokeLater(new Runnable() {
				public void run() {
					new ShoppingUI().setVisible(true);
				}
			});
		}

		// Variables declaration - do not modify
		private javax.swing.JButton addCart;
		private javax.swing.JList cart;
		private javax.swing.JList items;
		private javax.swing.JButton jButton1;
		private javax.swing.JLabel jLabel1;
		private javax.swing.JLabel jLabel10;
		private javax.swing.JLabel jLabel11;
		private javax.swing.JLabel jLabel12;
		private javax.swing.JLabel jLabel2;
		private javax.swing.JLabel jLabel3;
		private javax.swing.JLabel jLabel4;
		private javax.swing.JLabel jLabel5;
		private javax.swing.JLabel jLabel6;
		private javax.swing.JLabel jLabel7;
		private javax.swing.JLabel jLabel8;
		private javax.swing.JLabel jLabel9;
		private javax.swing.JPanel jPanel1;
		private javax.swing.JPanel jPanel2;
		private javax.swing.JScrollPane jScrollPane1;
		private javax.swing.JScrollPane jScrollPane2;
		private javax.swing.JScrollPane jScrollPane3;
		private javax.swing.JScrollPane jScrollPane4;
		private javax.swing.JButton removeCart;
		private javax.swing.JButton search;
		private javax.swing.JTextField searchBox;
		private javax.swing.JList sections;
		private javax.swing.JButton sortPrice;
		private javax.swing.JList types;
		// End of variables declaration
	}
}